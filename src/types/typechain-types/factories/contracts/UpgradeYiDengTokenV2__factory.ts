/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  UpgradeYiDengTokenV2,
  UpgradeYiDengTokenV2Interface,
} from "../../contracts/UpgradeYiDengTokenV2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "teamWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "marketingWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "communityWallet",
        type: "address",
      },
    ],
    name: "InitialDistributionCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "TokensSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKENS_PER_ETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyWithETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "communityAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "teamWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketingWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "communityWallet",
        type: "address",
      },
    ],
    name: "distributeInitialTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialDistributionDone",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingMintableSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "sellTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teamAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100d0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561006e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100cd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6114f4806100df6000396000f3fe6080604052600436106101435760003560e01c806370a08231116100b0578063c4d66de81161006c578063c4d66de814610368578063d53b4ab414610388578063dd62ed3e1461039e578063e086e5ec146103be578063e492c5a9146103d3578063f2fde38b146103f357005b806370a08231146102bb578063715018a6146102db5780638da5cb5b146102f057806395d89b411461031d578063a9059cbb14610332578063bc6e66041461035257005b806323b872dd116100ff57806323b872dd1461021d578063313ce5671461023d57806332cb6b0c14610259578063349f0b90146102705780636816521a146102855780636c11bcd31461029b57005b80630535ec771461014c57806306fdde031461017b578063095ea7b31461019d578063150d283d146101bd57806315f0c220146101c557806318160ddd146101e957005b3661014a57005b005b34801561015857600080fd5b506003546101669060ff1681565b60405190151581526020015b60405180910390f35b34801561018757600080fd5b50610190610413565b6040516101729190611152565b3480156101a957600080fd5b506101666101b83660046111bc565b6104d6565b61014a6104f0565b3480156101d157600080fd5b506101db60015481565b604051908152602001610172565b3480156101f557600080fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02546101db565b34801561022957600080fd5b506101666102383660046111e6565b610629565b34801561024957600080fd5b5060405160008152602001610172565b34801561026557600080fd5b506101db621312d081565b34801561027c57600080fd5b506101db61064d565b34801561029157600080fd5b506101db60005481565b3480156102a757600080fd5b5061014a6102b6366004611222565b610689565b3480156102c757600080fd5b506101db6102d636600461123b565b610860565b3480156102e757600080fd5b5061014a610888565b3480156102fc57600080fd5b5061030561089c565b6040516001600160a01b039091168152602001610172565b34801561032957600080fd5b506101906108ca565b34801561033e57600080fd5b5061016661034d3660046111bc565b610909565b34801561035e57600080fd5b506101db6103e881565b34801561037457600080fd5b5061014a61038336600461123b565b610917565b34801561039457600080fd5b506101db60025481565b3480156103aa57600080fd5b506101db6103b936600461125d565b610ac6565b3480156103ca57600080fd5b5061014a610b10565b3480156103df57600080fd5b5061014a6103ee366004611290565b610b5b565b3480156103ff57600080fd5b5061014a61040e36600461123b565b610c42565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03805460609160008051602061149f83398151915291610452906112d3565b80601f016020809104026020016040519081016040528092919081815260200182805461047e906112d3565b80156104cb5780601f106104a0576101008083540402835291602001916104cb565b820191906000526020600020905b8154815290600101906020018083116104ae57829003601f168201915b505050505091505090565b6000336104e4818585610c7d565b60019150505b92915050565b600034116105355760405162461bcd60e51b815260206004820152600d60248201526c09aeae6e840e6cadcc8408aa89609b1b60448201526064015b60405180910390fd5b6000610549670de0b6b3a764000034611323565b905060006105596103e883611345565b9050621312d0816105887f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b610592919061135c565b11156105e05760405162461bcd60e51b815260206004820152601760248201527f576f756c6420657863656564206d617820737570706c79000000000000000000604482015260640161052c565b6105ea3382610c8f565b604080513481526020810183905233917f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33910160405180910390a25050565b600033610637858285610cc9565b610642858585610d2f565b506001949350505050565b60006106777f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b61068490621312d061136f565b905090565b600081116106d95760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161052c565b806106e333610860565b10156107285760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161052c565b60006107366103e883611323565b9050804710156107885760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742045544820696e20636f6e747261637400000000604482015260640161052c565b6107923383610d8e565b604051600090339083908381818185875af1925050503d80600081146107d4576040519150601f19603f3d011682016040523d82523d6000602084013e6107d9565b606091505b50509050806108205760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b604482015260640161052c565b604080518481526020810184905233917f2dcf9433d75db0d8b1c172641f85e319ffe4ad22e108a95d1847ceb906e5195d910160405180910390a2505050565b6001600160a01b0316600090815260008051602061149f833981519152602052604090205490565b610890610dc4565b61089a6000610df6565b565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04805460609160008051602061149f83398151915291610452906112d3565b6000336104e4818585610d2f565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff1660008115801561095d5750825b905060008267ffffffffffffffff16600114801561097a5750303b155b905081158015610988575080155b156109a65760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156109d057845460ff60401b1916600160401b1785555b610a186040518060400160405280600c81526020016b2cb4a232b733902a37b5b2b760a11b81525060405180604001604052806002815260200161165160f21b815250610e67565b610a2186610e79565b6064610a31621312d06014611345565b610a3b9190611323565b6000556064610a4e621312d0600a611345565b610a589190611323565b6001556064610a6b621312d0600a611345565b610a759190611323565b6002558315610abe57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b610b18610dc4565b610b2061089c565b6001600160a01b03166108fc479081150290604051600060405180830381858888f19350505050158015610b58573d6000803e3d6000fd5b50565b610b63610dc4565b60035460ff1615610bc05760405162461bcd60e51b815260206004820152602160248201527f496e697469616c20646973747269627574696f6e20616c726561647920646f6e6044820152606560f81b606482015260840161052c565b610bcc83600054610c8f565b610bd882600154610c8f565b610be481600254610c8f565b6003805460ff19166001179055604080516001600160a01b038581168252848116602083015283168183015290517f4864f7df2cd1c07972b3dbf1a98de81ddd7d784caf0078d5e5e372b219f6695c916060908290030190a1505050565b610c4a610dc4565b6001600160a01b038116610c7457604051631e4fbdf760e01b81526000600482015260240161052c565b610b5881610df6565b610c8a8383836001610e8a565b505050565b6001600160a01b038216610cb95760405163ec442f0560e01b81526000600482015260240161052c565b610cc560008383610f72565b5050565b6000610cd58484610ac6565b90506000198114610d295781811015610d1a57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161052c565b610d2984848484036000610e8a565b50505050565b6001600160a01b038316610d5957604051634b637e8f60e11b81526000600482015260240161052c565b6001600160a01b038216610d835760405163ec442f0560e01b81526000600482015260240161052c565b610c8a838383610f72565b6001600160a01b038216610db857604051634b637e8f60e11b81526000600482015260240161052c565b610cc582600083610f72565b33610dcd61089c565b6001600160a01b03161461089a5760405163118cdaa760e01b815233600482015260240161052c565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b610e6f6110b0565b610cc582826110f9565b610e816110b0565b610b588161114a565b60008051602061149f8339815191526001600160a01b038516610ec35760405163e602df0560e01b81526000600482015260240161052c565b6001600160a01b038416610eed57604051634a1406b160e11b81526000600482015260240161052c565b6001600160a01b03808616600090815260018301602090815260408083209388168352929052208390558115610f6b57836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610f6291815260200190565b60405180910390a35b5050505050565b60008051602061149f8339815191526001600160a01b038416610fae5781816002016000828254610fa3919061135c565b909155506110209050565b6001600160a01b038416600090815260208290526040902054828110156110015760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161052c565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b03831661103e57600281018054839003905561105d565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110a291815260200190565b60405180910390a350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661089a57604051631afcd79f60e31b815260040160405180910390fd5b6111016110b0565b60008051602061149f8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361113b84826113de565b5060048101610d2983826113de565b610c4a6110b0565b600060208083528351808285015260005b8181101561117f57858101830151858201604001528201611163565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111b757600080fd5b919050565b600080604083850312156111cf57600080fd5b6111d8836111a0565b946020939093013593505050565b6000806000606084860312156111fb57600080fd5b611204846111a0565b9250611212602085016111a0565b9150604084013590509250925092565b60006020828403121561123457600080fd5b5035919050565b60006020828403121561124d57600080fd5b611256826111a0565b9392505050565b6000806040838503121561127057600080fd5b611279836111a0565b9150611287602084016111a0565b90509250929050565b6000806000606084860312156112a557600080fd5b6112ae846111a0565b92506112bc602085016111a0565b91506112ca604085016111a0565b90509250925092565b600181811c908216806112e757607f821691505b60208210810361130757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261134057634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176104ea576104ea61130d565b808201808211156104ea576104ea61130d565b818103818111156104ea576104ea61130d565b634e487b7160e01b600052604160045260246000fd5b601f821115610c8a57600081815260208120601f850160051c810160208610156113bf5750805b601f850160051c820191505b81811015610abe578281556001016113cb565b815167ffffffffffffffff8111156113f8576113f8611382565b61140c8161140684546112d3565b84611398565b602080601f83116001811461144157600084156114295750858301515b600019600386901b1c1916600185901b178555610abe565b600085815260208120601f198616915b8281101561147057888601518255948401946001909101908401611451565b508582101561148e5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a26469706673582212201944c751294645d50a8b232569d1b38510e1a6cbd834ca059cc7f53eadee17dc64736f6c63430008140033";

type UpgradeYiDengTokenV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeYiDengTokenV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradeYiDengTokenV2__factory extends ContractFactory {
  constructor(...args: UpgradeYiDengTokenV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UpgradeYiDengTokenV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UpgradeYiDengTokenV2__factory {
    return super.connect(runner) as UpgradeYiDengTokenV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeYiDengTokenV2Interface {
    return new Interface(_abi) as UpgradeYiDengTokenV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UpgradeYiDengTokenV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UpgradeYiDengTokenV2;
  }
}
