/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LaoyuanERC721Coin,
  LaoyuanERC721CoinInterface,
} from "../../contracts/LaoyuanERC721Coin";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200160a3803806200160a833981016040819052620000349162000123565b818160006200004483826200021c565b5060016200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61131280620002f86000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b88d4fde11610066578063b88d4fde146101e1578063c87b56dd146101f4578063d204c45e14610207578063e985e9c51461021a57600080fd5b806370a08231146101a557806395d89b41146101c6578063a22cb465146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610ddd565b61022d565b60405190151581526020015b60405180910390f35b61011f61023e565b60405161010e9190610e4a565b61013f61013a366004610e5d565b6102d0565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610e92565b6102f9565b005b61016a61017a366004610ebc565b610308565b61016a61018d366004610ebc565b610398565b61013f6101a0366004610e5d565b6103b8565b6101b86101b3366004610ef8565b6103c3565b60405190815260200161010e565b61011f61040b565b61016a6101dc366004610f13565b61041a565b61016a6101ef366004610fdb565b610425565b61011f610202366004610e5d565b61043d565b61016a610215366004611057565b610448565b6101026102283660046110b9565b610473565b6000610238826104a1565b92915050565b60606000805461024d906110ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610279906110ec565b80156102c65780601f1061029b576101008083540402835291602001916102c6565b820191906000526020600020905b8154815290600101906020018083116102a957829003601f168201915b5050505050905090565b60006102db826104c6565b506000828152600460205260409020546001600160a01b0316610238565b6103048282336104ff565b5050565b6001600160a01b03821661033757604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061034483833361050c565b9050836001600160a01b0316816001600160a01b031614610392576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161032e565b50505050565b6103b383838360405180602001604052806000815250610425565b505050565b6000610238826104c6565b60006001600160a01b0382166103ef576040516322718ad960e21b81526000600482015260240161032e565b506001600160a01b031660009081526003602052604090205490565b60606001805461024d906110ec565b610304338383610605565b610430848484610308565b61039233858585856106a4565b6060610238826107cf565b600780546000918261045983611126565b91905055905061046983826108e0565b6103b381836108fa565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b03198216632483248360e11b148061023857506102388261094a565b6000818152600260205260408120546001600160a01b03168061023857604051637e27328960e01b81526004810184905260240161032e565b6103b3838383600161099a565b6000828152600260205260408120546001600160a01b039081169083161561053957610539818486610aa0565b6001600160a01b038116156105775761055660008560008061099a565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156105a6576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b03821661063757604051630b61174360e31b81526001600160a01b038316600482015260240161032e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156107c857604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906106e690889088908790879060040161114d565b6020604051808303816000875af1925050508015610721575060408051601f3d908101601f1916820190925261071e9181019061118a565b60015b61078a573d80801561074f576040519150601f19603f3d011682016040523d82523d6000602084013e610754565b606091505b50805160000361078257604051633250574960e11b81526001600160a01b038516600482015260240161032e565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146107c657604051633250574960e11b81526001600160a01b038516600482015260240161032e565b505b5050505050565b60606107da826104c6565b50600082815260066020526040812080546107f4906110ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610820906110ec565b801561086d5780601f106108425761010080835404028352916020019161086d565b820191906000526020600020905b81548152906001019060200180831161085057829003601f168201915b50505050509050600061088b60408051602081019091526000815290565b9050805160000361089d575092915050565b8151156108cf5780826040516020016108b79291906111a7565b60405160208183030381529060405292505050919050565b6108d884610b04565b949350505050565b610304828260405180602001604052806000815250610b79565b6000828152600660205260409020610912828261121c565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b031982166380ac58cd60e01b148061097b57506001600160e01b03198216635b5e139f60e01b145b8061023857506301ffc9a760e01b6001600160e01b0319831614610238565b80806109ae57506001600160a01b03821615155b15610a705760006109be846104c6565b90506001600160a01b038316158015906109ea5750826001600160a01b0316816001600160a01b031614155b80156109fd57506109fb8184610473565b155b15610a265760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161032e565b8115610a6e5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610aab838383610b91565b6103b3576001600160a01b038316610ad957604051637e27328960e01b81526004810182905260240161032e565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161032e565b6060610b0f826104c6565b506000610b2760408051602081019091526000815290565b90506000815111610b475760405180602001604052806000815250610b72565b80610b5184610bf4565b604051602001610b629291906111a7565b6040516020818303038152906040525b9392505050565b610b838383610c87565b6103b33360008585856106a4565b60006001600160a01b038316158015906108d85750826001600160a01b0316846001600160a01b03161480610bcb5750610bcb8484610473565b806108d85750506000908152600460205260409020546001600160a01b03908116911614919050565b60606000610c0183610cec565b600101905060008167ffffffffffffffff811115610c2157610c21610f4f565b6040519080825280601f01601f191660200182016040528015610c4b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c5557509392505050565b6001600160a01b038216610cb157604051633250574960e11b81526000600482015260240161032e565b6000610cbf8383600061050c565b90506001600160a01b038116156103b3576040516339e3563760e11b81526000600482015260240161032e565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610d2b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610d57576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610d7557662386f26fc10000830492506010015b6305f5e1008310610d8d576305f5e100830492506008015b6127108310610da157612710830492506004015b60648310610db3576064830492506002015b600a83106102385760010192915050565b6001600160e01b031981168114610dda57600080fd5b50565b600060208284031215610def57600080fd5b8135610b7281610dc4565b60005b83811015610e15578181015183820152602001610dfd565b50506000910152565b60008151808452610e36816020860160208601610dfa565b601f01601f19169290920160200192915050565b602081526000610b726020830184610e1e565b600060208284031215610e6f57600080fd5b5035919050565b80356001600160a01b0381168114610e8d57600080fd5b919050565b60008060408385031215610ea557600080fd5b610eae83610e76565b946020939093013593505050565b600080600060608486031215610ed157600080fd5b610eda84610e76565b9250610ee860208501610e76565b9150604084013590509250925092565b600060208284031215610f0a57600080fd5b610b7282610e76565b60008060408385031215610f2657600080fd5b610f2f83610e76565b915060208301358015158114610f4457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610f8057610f80610f4f565b604051601f8501601f19908116603f01168101908282118183101715610fa857610fa8610f4f565b81604052809350858152868686011115610fc157600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215610ff157600080fd5b610ffa85610e76565b935061100860208601610e76565b925060408501359150606085013567ffffffffffffffff81111561102b57600080fd5b8501601f8101871361103c57600080fd5b61104b87823560208401610f65565b91505092959194509250565b6000806040838503121561106a57600080fd5b61107383610e76565b9150602083013567ffffffffffffffff81111561108f57600080fd5b8301601f810185136110a057600080fd5b6110af85823560208401610f65565b9150509250929050565b600080604083850312156110cc57600080fd5b6110d583610e76565b91506110e360208401610e76565b90509250929050565b600181811c9082168061110057607f821691505b60208210810361112057634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161114657634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061118090830184610e1e565b9695505050505050565b60006020828403121561119c57600080fd5b8151610b7281610dc4565b600083516111b9818460208801610dfa565b8351908301906111cd818360208801610dfa565b01949350505050565b601f8211156103b357600081815260208120601f850160051c810160208610156111fd5750805b601f850160051c820191505b818110156107c657828155600101611209565b815167ffffffffffffffff81111561123657611236610f4f565b61124a8161124484546110ec565b846111d6565b602080601f83116001811461127f57600084156112675750858301515b600019600386901b1c1916600185901b1785556107c6565b600085815260208120601f198616915b828110156112ae5788860151825594840194600190910190840161128f565b50858210156112cc5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220dbf6c1145bfc03ccf080c6eed96e6846f5de37692a7c8bced42c99ceb9e8edb664736f6c63430008140033";

type LaoyuanERC721CoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LaoyuanERC721CoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LaoyuanERC721Coin__factory extends ContractFactory {
  constructor(...args: LaoyuanERC721CoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      LaoyuanERC721Coin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LaoyuanERC721Coin__factory {
    return super.connect(runner) as LaoyuanERC721Coin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LaoyuanERC721CoinInterface {
    return new Interface(_abi) as LaoyuanERC721CoinInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LaoyuanERC721Coin {
    return new Contract(address, _abi, runner) as unknown as LaoyuanERC721Coin;
  }
}
